name: Build and Release JAR

on:
  push:
    tags:
      - "v*" # Trigger per i tag che iniziano con "v"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env: 
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Create .env file in src/main/resources
        run: |
                  mkdir -p src/main/resources
                  cat <<EOF > src/main/resources/.env
                  MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}
                  MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}
                  MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}
                  MONGODB_HOST=${{ secrets.MONGODB_HOST }}
                  JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
                  EOF
              
      - name: Build JAR
        run: ./mvnw clean package -f pom.xml

      - name: Rename JAR with Version
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/^v//')
          mv target/medexpress-0.0.1-SNAPSHOT.jar target/medexpress-${VERSION}.jar
              
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: medexpress-${VERSION}.jar 
          path: target/medexpress-${VERSION}.jar 

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Upload JAR to Latest Release
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/^v//')
          gh release upload $(gh release list --limit 1 --json tagName -q '.[0].tagName') target/medexpress-${VERSION}.jar \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
