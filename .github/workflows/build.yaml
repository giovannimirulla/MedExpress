name: Build and Release JAR

on:
  push:
    tags:
      - "v*" # Trigger per i tag che iniziano con "v"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env: # Esporta le variabili d'ambiente dai secrets
      MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21" # Versione Java specificata nel tuo progetto

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get secrets
        run: |
                mkdir -p ~/tmp
                cat <<EOF > ~/tmp/mongodb-host-in-file
                ${{ secrets.MONGODB_HOST}}
                EOF
                cat <<EOF > ~/tmp/mongodb-database-in-file
                ${{ secrets.MONGODB_DATABASE}}
                EOF
                cat <<EOF > ~/tmp/mongodb-username-in-file
                ${{ secrets.MONGODB_USERNAME}}
                EOF
                cat <<EOF > ~/tmp/mongodb-password-in-file
                ${{ secrets.MONGODB_PASSWORD}}
                EOF
                cat <<EOF > ~/tmp/jwt-secret-key-in-file
                ${{ secrets.JWT_SECRET_KEY}}
                EOF
                cat <<EOF > ~/tmp/nextauth-url-in-file
                ${{ secrets.NEXTAUTH_URL}}
                EOF
                cat <<EOF > ~/tmp/nextauth-secret-in-file
                ${{ secrets.NEXTAUTH_SECRET}}
                EOF
                cat <<EOF > ~/tmp/next-public-socket-url-in-file
                ${{ secrets.NEXT_PUBLIC_SOCKET_URL}}
                EOF

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
                name: my-secrets
                path: ~/tmp/

      - name: Build JAR
        run: |
            export MONGODB_HOST=${{ secrets.MONGODB_HOST }}
            export MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}
            export MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}
            export MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}
            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            export NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            export NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            export NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }}
            ./mvnw package -DskipTests -f pom.xml

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: medexpress-${{ github.ref_name }}.jar
          path: target/medexpress-0.0.1-SNAPSHOT.jar

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Upload JAR to Latest Release
        run: |
          gh release upload $(gh release list --limit 1 --json tagName -q '.[0].tagName') target/medexpress-0.0.1-SNAPSHOT.jar \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
